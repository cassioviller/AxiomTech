# Imagem base simplificada para construção
FROM node:20-alpine AS builder

# Diretório de trabalho
WORKDIR /app

# Copiar dependências
COPY package.json package-lock.json ./
RUN npm ci

# Copiar código fonte
COPY . .

# Compilar
RUN npm run build

# Imagem de produção
FROM node:20-alpine AS runner

WORKDIR /app

# Configurar ambiente
ENV NODE_ENV=production
ENV PORT=6000
ENV HOST=0.0.0.0

# Instalar apenas dependências de produção
COPY package.json package-lock.json ./
RUN npm ci --only=production

# Copiar a pasta build
COPY --from=builder /app/dist ./dist

# Criar diretórios necessários
RUN mkdir -p ./dist/public

# Criar um fallback index.html básico
RUN echo '<!DOCTYPE html><html><head><title>Axiom</title></head><body><h1>Axiom Strategic Technologies</h1><p><a href="https://wa.me/5511999999999">Contato</a></p></body></html>' > ./dist/index.html && \
    cp ./dist/index.html ./dist/public/index.html

# Script para servir arquivos estáticos
RUN echo '#!/usr/bin/env node\n\
const express = require("express");\n\
const path = require("path");\n\
const fs = require("fs");\n\
\n\
const app = express();\n\
const PORT = process.env.PORT || 6000;\n\
\n\
// Servir arquivos estáticos\n\
app.use(express.static("./dist"));\n\
\n\
// Rota de verificação\n\
app.get("/ping", (req, res) => {\n\
  res.send("pong");\n\
});\n\
\n\
// Rota principal\n\
app.get("*", (req, res) => {\n\
  res.sendFile(path.join(__dirname, "dist", "index.html"));\n\
});\n\
\n\
app.listen(PORT, "0.0.0.0", () => {\n\
  console.log(`Servidor rodando na porta ${PORT}`);\n\
});' > server.js

# Expor porta
EXPOSE 6000

# Iniciar aplicativo
CMD ["node", "server.js"]